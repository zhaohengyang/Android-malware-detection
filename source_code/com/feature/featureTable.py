'''
@author: zhaohengyang
Copyright (c) 2015 zhaohengyang. All rights reserved.
'''

from com.database.database_connection import *
from com.applicationVariables.applicationVariables import *

class FeatureTable(object):

    def __init__(self):
        #permissions are hard coded 
        dbmgr = permissionMappingManager(databasePath)
        self.featureList = {}
        for API in dbmgr.getDistinctAPIList():
            self.featureList[API] = 0
        #for item in self.featureList:
        #    print item
        
        

          
    # Append APIs from database to feature table
    # Append API parts for arff scheme
    def createSchema(self, outputPath):   
        # Clear the file
        outputfile = open(outputPath,'w')
        outputfile.close() 
            
        #load impotant API part to feature table and arff scheme
        outputfile = open(outputPath,'a') 
        outputfile.write("@relation permission_association\n")  
        
            
        for key in self.featureList:
            outputfile.write("@attribute '" + key + "' numeric\n")

 
        
        
        #load the bottom part of scheme
        outputfile.write("@attribute 'app_type' { benign, malware}\n")
        outputfile.write("@data\n")  
        outputfile.close()
        #print systemDefinedPemissions 

    def getFunctionName(self, featureFunctionFormat):
        return featureFunctionFormat.split("_")[0]
    
    def getEachSetStartIndex(self):
        startIndexList = [1]
        start = 1
        for list in [self.featureList1, self.featureList2, self.featureList3, self.featureList4]:
            start += len(list)
            startIndexList.append(start)
        print startIndexList
        return startIndexList
    
#ft = FeatureTable()
