'''
@author: zhaohengyang
Copyright (c) 2015 zhaohengyang. All rights reserved.
'''

from subprocess import *
import os,re
from com.applicationVariables.applicationVariables import *

class Decompiler():
         
              
    def decompilePath(self, sourcePath, destinationPath):
        apkFileList = []
        if os.path.exists(sourcePath):
            for root,dirs,files in os.walk(sourcePath):
                for filespath in files:           
                    fullPath = os.path.join(root,filespath)
                    if re.search(r'.apk$', fullPath):
                        #print fullPath    
                        apkFileList.append(fullPath)
                        
        id = 1             
        for path in apkFileList:           
            print path
            (dirName, fileName) = os.path.split(path)
            #dPath = destinationPath + '/' + fileName
            dPath = destinationPath + '/' + str(id)
            id += 1
                
            #use apktool.jar to decompile
            args = [apktoolPath, 'd', path, dPath] # Any number of args to be passed to the jar file
            self.jarWrapper(*args)
            print "decompile sucessful"
                   
        
    #Unzip Apk package
    #def unzipFile(source_filename, dest_dir):
    #    with zipfile.ZipFile(source_filename) as zf:
    #        zf.extractall(dest_dir)
    
    # Run java runtime files   
    def jarWrapper(self, *args):
        try:
            process = Popen(['java', '-jar']+list(args), stdout=PIPE, stderr=PIPE)    
    
        except:
            print "jarWrapper:codeManifestProblem"
        stdout, stderr = process.communicate()
    
   
                         



